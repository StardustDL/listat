name: CD

on:
  repository_dispatch:
    types: [cd]

defaults:
  run:
    shell: pwsh

env:
  go-version: "1.14"
  dotnet-version: "3.1.x"
  build_version: "0.0.4.${{ github.run_number }}-preview"

jobs:
  pub-images:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Go
      uses: actions/setup-go@v1
      with:
        go-version: ${{ env.go-version }}
    - name: Setup psake
      run: Set-PSRepository -Name PSGallery -InstallationPolicy Trusted; Install-Module -Name psake
    - name: Build
      run: Invoke-psake cd-build
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: dist
        path: ./dist
    - name: Push image
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: stardustdl/listat
        tag_with_ref: true
        dockerfile: ./Dockerfile
    - name: Mirror image
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.MIRROR_DOCKER_USERNAME }}
        password: ${{ secrets.MIRROR_DOCKER_PASSWORD }}
        registry: ${{ secrets.MIRROR_DOCKER_REGISTRY }}
        repository: stardustdl/listat
        tags: latest
        dockerfile: ./Dockerfile
  pub-pkgs:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.dotnet-version }}
    - name: Setup psake
      run: Set-PSRepository -Name PSGallery -InstallationPolicy Trusted; Install-Module -Name psake
    - name: CD
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.AZ_TOKEN }}
      run: |
        Set-Location ./sdk
        Invoke-psake cd -parameters @{ "NUGET_AUTH_TOKEN" = $env:NUGET_AUTH_TOKEN ; "build_version" = $env:build_version }
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: packages
        path: ./sdk/packages